{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","events","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capatalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d64a1727.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                {props.mode === 'light' ? 'Enable DarkMode' : 'Enable LightMode'}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title here\",\r\n  aboutText: \"About Text here\",\r\n};\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    };\r\n\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    };\r\n\r\n    const handleClearClick = () => {\r\n        setText(\"\");\r\n        props.showAlert(\"Text Cleared\", \"success\");\r\n    };\r\n\r\n    const handleCopyClick = () => {\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();  // To select Text\r\n        navigator.clipboard.writeText(text.value);  // To copy text\r\n        props.showAlert(\"Text Copied\", \"success\");\r\n    };\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces deleted\", \"success\");\r\n    };\r\n\r\n    const handleChange = (events) => {\r\n        setText(events.target.value);\r\n    };\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleChange} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }} id=\"myBox\" rows=\"9\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary m-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary m-1\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary m-1\" onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary m-1\" onClick={handleCopyClick}>Copy Text</button>\r\n                <button className=\"btn btn-primary m-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h3>Your text summary</h3>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n                <h3>Preview</h3>\r\n                <p>{text.length > 0 ? text : \"Enter something in the textbox above to preview it here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capatalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    };\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capatalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\nimport React, { useState } from 'react';\n// import About from './components/About';\nimport Navbar from \"./components/Navbar.js\";\nimport TextForm from \"./components/TextForm.js\";\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not.\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}